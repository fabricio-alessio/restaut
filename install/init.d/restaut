#!/bin/bash
#
# restaut     This shell script takes care of starting and stopping restaut
#
# chkconfig: 2345 20 80
### BEGIN INIT INFO
# Provides: restaut
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Description: start and stop restaut
# Short-Description: start and stop restaut
### END INIT INFO
 
## Source function library.
#. /etc/rc.d/init.d/functions
export RESTAUT_HOME=/data/restaut
SHUTDOWN_WAIT=20

restaut_pid() {
  echo `ps aux | grep restaut.jar | grep -v grep | awk '{ print $2 }'`
}
 
start() {
  pid=$(restaut_pid)
  if [ -n "$pid" ] 
  then
    echo "restaut is already running (pid: $pid)"
  else
    # Start restaut
    echo "Starting restaut"
    ulimit -n 100000
    umask 007
    cd $RESTAUT_HOME
    /bin/su -p -s /bin/sh tray $RESTAUT_HOME/startup.sh > /dev/null 2>&1
  fi
 
 
  return 0
}
 
stop() {
  pid=$(restaut_pid)
  if [ -n "$pid" ]
  then
    echo "Stoping restaut"
    kill $pid
 
    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\nwaiting for processes to exit";
      sleep 1
      let count=$count+1;
    done
 
    if [ $count -gt $kwait ]; then
      echo -n -e "\nkilling processes which didn't stop after $SHUTDOWN_WAIT seconds"
      kill -9 $pid
    fi
    echo -n -e "\n";
  else
    echo "restaut is not running"
  fi
 
  return 0
}
 
case $1 in
start)
  start
;; 
stop)   
  stop
;; 
restart)
  stop
  start
;;
status)
  pid=$(restaut_pid)
  if [ -n "$pid" ]
  then
    echo "restaut is running with pid: $pid"
  else
    echo "restaut is not running"
  fi
;; 
esac    
exit 0
